{
  "version": 3,
  "sources": ["../../../../../Modules/Productos/TblproductosDidi/TblproductosDidiPage.ts", "../../../../../Modules/Productos/TblproductosDidi/TblproductosDidiGrid.ts", "../../../../../Modules/Productos/TblproductosDidi/TblproductosDidiDialog.ts", "../../../../../Modules/Productos/ImportExcel/TblproductosDidiImportExcelDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { TblproductosDidiGrid } from './TblproductosDidiGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new TblproductosDidiGrid($('#GridDiv')).element);\r\n}", "import { Decorators, EntityGrid, ToolButton } from '@serenity-is/corelib';\r\nimport { TblproductosDidiColumns, TblproductosDidiRow, TblproductosDidiService } from '../../ServerTypes/Productos';\nimport { TblproductosDidiDialog } from './TblproductosDidiDialog';\r\n/*import { TblproductosDidiDialogImportExcel } from './TblproductosDidiDialogImportExcel';*/\nimport { TblproductosDidiDialogImportExcel } from '../ImportExcel/TblproductosDidiImportExcelDialog'\nimport { ExcelExportHelper, PdfExportHelper, ReportHelper } from \"@serenity-is/extensions\";\r\n\r\n@Decorators.registerClass('SMP.Productos.TblproductosDidiGrid')\r\nexport class TblproductosDidiGrid extends EntityGrid<TblproductosDidiRow, any> {\r\n    protected getColumnsKey() { return TblproductosDidiColumns.columnsKey; }\r\n    protected getDialogType() { return TblproductosDidiDialog; }\r\n    protected getRowDefinition() { return TblproductosDidiRow; }\r\n    protected getService() { return TblproductosDidiService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\n    protected getButtons(): ToolButton[] {\r\n        var buttons = super.getButtons();\r\n\r\n        buttons.push(ExcelExportHelper.createToolButton({\r\n            grid: this,\r\n            service: TblproductosDidiService.baseUrl + '/ListExcel',\r\n            onViewSubmit: () => this.onViewSubmit(),\r\n            separator: true\r\n        }));\r\n\r\n        buttons.push(PdfExportHelper.createToolButton({\r\n            grid: this,\r\n            onViewSubmit: () => this.onViewSubmit()\r\n        }));\n\n\n        // add our import button\r\n        buttons.push({\r\n            title: 'Import From Excel',\r\n            cssClass: 'export-xlsx-button',\r\n            onClick: () => {\r\n                // open import dialog, let it handle rest\r\n                var dialog = new TblproductosDidiDialogImportExcel();\r\n                dialog.element.on('dialogclose', () => {\r\n                    this.refresh();\r\n                    dialog = null;\r\n                });\r\n                dialog.dialogOpen();\r\n            }\r\n        });\r\n\r\n        return buttons;\r\n    }\r\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n/*import { DialogButton } from '@serenity-is/corelib/q';*/\r\nimport { TblproductosDidiForm, TblproductosDidiRow, TblproductosDidiService } from '../../ServerTypes/Productos';\n\r\n@Decorators.registerClass('SMP.Productos.TblproductosDidiDialog')\r\nexport class TblproductosDidiDialog extends EntityDialog<TblproductosDidiRow, any> {\n\n\r\n    //public dialogOpen(asPanel?: boolean): void {\r\n    //    super.dialogOpen(asPanel);\r\n    //    this.form.fkIdArticulo.element.focus();\r\n    //}\r\n\r\n    protected getFormKey() { return TblproductosDidiForm.formKey; }\r\n    protected getIdProperty() { return TblproductosDidiRow.idProperty; }\r\n    protected getLocalTextPrefix() { return TblproductosDidiRow.localTextPrefix; }\r\n    protected getNameProperty() { return TblproductosDidiRow.nameProperty; }\r\n    protected getService() { return TblproductosDidiService.baseUrl; }\r\n    protected getModifyPermisison() { return TblproductosDidiRow.updatePermission; }\r\n    protected getReadPermisison() { return TblproductosDidiRow.readPermission }\r\n    protected getDeletePermission() { return TblproductosDidiRow.deletePermission; }\r\n    protected getInsertPermission() { return TblproductosDidiRow.insertPermission; }\r\n    protected getUpdatePermission() { return TblproductosDidiRow.updatePermission; }\n\r\n    public form = new TblproductosDidiForm(this.idPrefix);\n\r\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { DialogButton } from '@serenity-is/corelib/q';\r\nimport { TblproductosDidiImportExcelForm, TblproductosDidiRow, TblproductosDidiService } from '../../ServerTypes/Productos';\n/*import { TblproductosDidiImportExcelForm } from '../ImportExcel/';*/\n\r\n@Decorators.registerClass('SMP.Productos.ImportExcel.TblproductosDidiDialogImportExcel')\r\nexport class TblproductosDidiDialogImportExcel extends EntityDialog<TblproductosDidiRow, any> {\n\n\r\n    protected getFormKey() { return TblproductosDidiImportExcelForm.formKey; }\r\n    protected getRowDefinition() { return TblproductosDidiRow; }\r\n    protected getService() { return TblproductosDidiService.baseUrl; }\r\n\n\n/*    private form: Forms.TblproductosDidiGridForm;*/\r\n\r\n    protected form = new TblproductosDidiImportExcelForm(this.idPrefix);\n\n    constructor() {\r\n        super();\r\n\r\n        this.form = new TblproductosDidiImportExcelForm(this.idPrefix);\r\n    }\n\n    protected getDialogTitle(): string {\r\n        return \"Excel Import\";\r\n    }\r\n\r\n    protected getDialogButtons(): DialogButton[] {\r\n        return [\r\n            {\r\n                text: 'Import',\r\n                click: () => {\r\n                    if (!this.validateBeforeSave())\r\n                        return;\r\n\r\n                    if (this.form.FileName.value == null ||\r\n                        Q.isEmptyOrNull(this.form.FileName.value.Filename)) {\r\n                        Q.notifyError(\"Please select a file!\");\r\n                        return;\r\n                    }\r\n                    TblproductosDidiService.ExcelImport({\r\n                        FileName: this.form.FileName.value.Filename\r\n                    }, response => {\r\n                        Q.notifyInfo(\r\n                            'Inserted: ' + (response.Inserted || 0) +\r\n                            ', Updated: ' + (response.Updated || 0));\r\n\r\n                        if (response.ErrorList != null && response.ErrorList.length > 0) {\r\n                            Q.notifyError(response.ErrorList.join(',\\r\\n '));\r\n                        }\r\n\r\n                        this.dialogClose();\r\n                    });\r\n                },\r\n            },\r\n            {\r\n                text: 'Cancel',\r\n                click: () => this.dialogClose()\r\n            }\r\n        ];\r\n    }\n\r\n}"],
  "mappings": "mNAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAmD,SCAnD,IAAAC,EAAyC,SAKlC,IAAMC,EAAN,cAAqC,cAAuC,CAA5E,kCAmBH,KAAO,KAAO,IAAIC,EAAqB,KAAK,QAAQ,EAX1C,YAAa,CAAE,OAAOA,EAAqB,OAAS,CACpD,eAAgB,CAAE,OAAOC,EAAoB,UAAY,CACzD,oBAAqB,CAAE,OAAOA,EAAoB,eAAiB,CACnE,iBAAkB,CAAE,OAAOA,EAAoB,YAAc,CAC7D,YAAa,CAAE,OAAOC,EAAwB,OAAS,CACvD,qBAAsB,CAAE,OAAOD,EAAoB,gBAAkB,CACrE,mBAAoB,CAAE,OAAOA,EAAoB,cAAe,CAChE,qBAAsB,CAAE,OAAOA,EAAoB,gBAAkB,CACrE,qBAAsB,CAAE,OAAOA,EAAoB,gBAAkB,CACrE,qBAAsB,CAAE,OAAOA,EAAoB,gBAAkB,CAInF,EArBaE,EAAAJ,EAAA,0BAAAA,EAANK,EAAA,CADN,aAAW,cAAc,sCAAsC,GACnDL,GCLb,IAAAM,EAAyC,SAMlC,IAAMC,EAAN,cAAgD,cAAuC,CAY1F,aAAc,CACV,MAAM,EAHV,KAAU,KAAO,IAAIC,EAAgC,KAAK,QAAQ,EAK9D,KAAK,KAAO,IAAIA,EAAgC,KAAK,QAAQ,CACjE,CAbU,YAAa,CAAE,OAAOA,EAAgC,OAAS,CAC/D,kBAAmB,CAAE,OAAOC,CAAqB,CACjD,YAAa,CAAE,OAAOC,EAAwB,OAAS,CAavD,gBAAyB,CAC/B,MAAO,cACX,CAEU,kBAAmC,CACzC,MAAO,CACH,CACI,KAAM,SACN,MAAO,IAAM,CACT,GAAK,KAAK,mBAAmB,EAG7B,IAAI,KAAK,KAAK,SAAS,OAAS,MAC5B,EAAE,cAAc,KAAK,KAAK,SAAS,MAAM,QAAQ,EAAG,CACpD,EAAE,YAAY,uBAAuB,EACrC,MACJ,CACAA,EAAwB,YAAY,CAChC,SAAU,KAAK,KAAK,SAAS,MAAM,QACvC,EAAGC,GAAY,CACX,EAAE,WACE,cAAgBA,EAAS,UAAY,GACrC,eAAiBA,EAAS,SAAW,EAAE,EAEvCA,EAAS,WAAa,MAAQA,EAAS,UAAU,OAAS,GAC1D,EAAE,YAAYA,EAAS,UAAU,KAAK;AAAA,EAAQ,CAAC,EAGnD,KAAK,YAAY,CACrB,CAAC,EACL,CACJ,EACA,CACI,KAAM,SACN,MAAO,IAAM,KAAK,YAAY,CAClC,CACJ,CACJ,CAEJ,EAzDaC,EAAAL,EAAA,qCAAAA,EAANM,EAAA,CADN,aAAW,cAAc,6DAA6D,GAC1EN,GFDb,IAAAO,EAAiE,SAG1D,IAAMC,EAAN,cAAmC,YAAqC,CACjE,eAAgB,CAAE,OAAOC,EAAwB,UAAY,CAC7D,eAAgB,CAAE,OAAOC,CAAwB,CACjD,kBAAmB,CAAE,OAAOC,CAAqB,CACjD,YAAa,CAAE,OAAOC,EAAwB,OAAS,CAEjE,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CACU,YAA2B,CACjC,IAAIC,EAAU,MAAM,WAAW,EAE/B,OAAAA,EAAQ,KAAK,oBAAkB,iBAAiB,CAC5C,KAAM,KACN,QAASF,EAAwB,QAAU,aAC3C,aAAc,IAAM,KAAK,aAAa,EACtC,UAAW,EACf,CAAC,CAAC,EAEFE,EAAQ,KAAK,kBAAgB,iBAAiB,CAC1C,KAAM,KACN,aAAc,IAAM,KAAK,aAAa,CAC1C,CAAC,CAAC,EAIFA,EAAQ,KAAK,CACT,MAAO,oBACP,SAAU,qBACV,QAAS,IAAM,CAEX,IAAIC,EAAS,IAAIC,EACjBD,EAAO,QAAQ,GAAG,cAAe,IAAM,CACnC,KAAK,QAAQ,EACbA,EAAS,IACb,CAAC,EACDA,EAAO,WAAW,CACtB,CACJ,CAAC,EAEMD,CACX,CACJ,EA1CaG,EAAAT,EAAA,wBAAAA,EAANU,EAAA,CADN,aAAW,cAAc,oCAAoC,GACjDV,GDLE,SAARW,GAA4B,IAC/B,0BAAuB,IAAIC,EAAqB,EAAE,UAAU,CAAC,EAAE,OAAO,CAC1E,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "import_corelib", "TblproductosDidiDialog", "TblproductosDidiForm", "TblproductosDidiRow", "TblproductosDidiService", "__name", "__decorateClass", "import_corelib", "TblproductosDidiDialogImportExcel", "TblproductosDidiImportExcelForm", "TblproductosDidiRow", "TblproductosDidiService", "response", "__name", "__decorateClass", "import_extensions", "TblproductosDidiGrid", "TblproductosDidiColumns", "TblproductosDidiDialog", "TblproductosDidiRow", "TblproductosDidiService", "container", "buttons", "dialog", "TblproductosDidiDialogImportExcel", "__name", "__decorateClass", "pageInit", "TblproductosDidiGrid", "__name"]
}
