{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Sucursales/TblSucursalColumns.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalDidiColumns.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalDidiRow.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalDidiService.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalRappiColumns.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalRappiRow.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalRappiService.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalRow.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalService.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalUberColumns.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalUberRow.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalUberService.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalDidiForm.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalForm.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalRappiForm.ts", "../../../Modules/ServerTypes/Sucursales/TblSucursalUberForm.ts"],
  "sourcesContent": ["\uFEFFexport class TblSucursalColumns {\r\n    static columnsKey = 'Sucursales.TblSucursal';\r\n}", "\uFEFFexport class TblSucursalDidiColumns {\r\n    static columnsKey = 'Sucursales.TblSucursalDidi';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TblSucursalDidiRow {\n    LocalSap?: string;\n    NombreSucursal?: string;\n}\n\nexport abstract class TblSucursalDidiRow {\n    static readonly idProperty = 'LocalSap';\n    static readonly nameProperty = 'LocalSap';\n    static readonly localTextPrefix = 'Sucursales.TblSucursalDidi';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<TblSucursalDidiRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { TblSucursalDidiRow } from \"./TblSucursalDidiRow\";\n\nexport namespace TblSucursalDidiService {\n    export const baseUrl = 'Sucursales/TblSucursalDidi';\n\n    export declare function Create(request: SaveRequest<TblSucursalDidiRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TblSucursalDidiRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TblSucursalDidiRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TblSucursalDidiRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Sucursales/TblSucursalDidi/Create\",\n        Update: \"Sucursales/TblSucursalDidi/Update\",\n        Delete: \"Sucursales/TblSucursalDidi/Delete\",\n        Retrieve: \"Sucursales/TblSucursalDidi/Retrieve\",\n        List: \"Sucursales/TblSucursalDidi/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TblSucursalDidiService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class TblSucursalRappiColumns {\r\n    static columnsKey = 'Sucursales.TblSucursalRappi';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TblSucursalRappiRow {\n    LocalSap?: string;\n    NombreSucursal?: string;\n}\n\nexport abstract class TblSucursalRappiRow {\n    static readonly idProperty = 'LocalSap';\n    static readonly nameProperty = 'LocalSap';\n    static readonly localTextPrefix = 'Sucursales.TblSucursalRappi';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<TblSucursalRappiRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { TblSucursalRappiRow } from \"./TblSucursalRappiRow\";\n\nexport namespace TblSucursalRappiService {\n    export const baseUrl = 'Sucursales/TblSucursalRappi';\n\n    export declare function Create(request: SaveRequest<TblSucursalRappiRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TblSucursalRappiRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TblSucursalRappiRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TblSucursalRappiRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Sucursales/TblSucursalRappi/Create\",\n        Update: \"Sucursales/TblSucursalRappi/Update\",\n        Delete: \"Sucursales/TblSucursalRappi/Delete\",\n        Retrieve: \"Sucursales/TblSucursalRappi/Retrieve\",\n        List: \"Sucursales/TblSucursalRappi/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TblSucursalRappiService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TblSucursalRow {\n    LocalSap?: string;\n    NombreSuc?: string;\n    IdSucursal?: number;\n    Direccion?: string;\n    Codigopostal?: string;\n    Pais?: number;\n    Ciudad?: number;\n    Estado?: number;\n    Region?: number;\n    Zona?: number;\n}\n\nexport abstract class TblSucursalRow {\n    static readonly idProperty = 'IdSucursal';\n    static readonly nameProperty = 'LocalSap';\n    static readonly localTextPrefix = 'Sucursales.TblSucursal';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<TblSucursalRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { TblSucursalRow } from \"./TblSucursalRow\";\n\nexport namespace TblSucursalService {\n    export const baseUrl = 'Sucursales/TblSucursal';\n\n    export declare function Create(request: SaveRequest<TblSucursalRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TblSucursalRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TblSucursalRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TblSucursalRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Sucursales/TblSucursal/Create\",\n        Update: \"Sucursales/TblSucursal/Update\",\n        Delete: \"Sucursales/TblSucursal/Delete\",\n        Retrieve: \"Sucursales/TblSucursal/Retrieve\",\n        List: \"Sucursales/TblSucursal/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TblSucursalService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class TblSucursalUberColumns {\r\n    static columnsKey = 'Sucursales.TblSucursalUber';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface TblSucursalUberRow {\n    LocalSap?: string;\n    NombreSucursal?: string;\n}\n\nexport abstract class TblSucursalUberRow {\n    static readonly idProperty = 'LocalSap';\n    static readonly nameProperty = 'LocalSap';\n    static readonly localTextPrefix = 'Sucursales.TblSucursalUber';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<TblSucursalUberRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { TblSucursalUberRow } from \"./TblSucursalUberRow\";\n\nexport namespace TblSucursalUberService {\n    export const baseUrl = 'Sucursales/TblSucursalUber';\n\n    export declare function Create(request: SaveRequest<TblSucursalUberRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<TblSucursalUberRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<TblSucursalUberRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<TblSucursalUberRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Sucursales/TblSucursalUber/Create\",\n        Update: \"Sucursales/TblSucursalUber/Update\",\n        Delete: \"Sucursales/TblSucursalUber/Delete\",\n        Retrieve: \"Sucursales/TblSucursalUber/Retrieve\",\n        List: \"Sucursales/TblSucursalUber/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>TblSucursalUberService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { PrefixedContext } from \"@serenity-is/corelib\";\n\nexport interface TblSucursalDidiForm {\n}\n\nexport class TblSucursalDidiForm extends PrefixedContext {\n    static formKey = 'Sucursales.TblSucursalDidi';\n}", "\uFEFFimport { StringEditor, IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface TblSucursalForm {\n    LocalSap: StringEditor;\n    NombreSuc: StringEditor;\n    Direccion: StringEditor;\n    Codigopostal: StringEditor;\n    Pais: IntegerEditor;\n    Ciudad: IntegerEditor;\n    Estado: IntegerEditor;\n    Region: IntegerEditor;\n    Zona: IntegerEditor;\n}\n\nexport class TblSucursalForm extends PrefixedContext {\n    static formKey = 'Sucursales.TblSucursal';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!TblSucursalForm.init)  {\n            TblSucursalForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = IntegerEditor;\n\n            initFormType(TblSucursalForm, [\n                'LocalSap', w0,\n                'NombreSuc', w0,\n                'Direccion', w0,\n                'Codigopostal', w0,\n                'Pais', w1,\n                'Ciudad', w1,\n                'Estado', w1,\n                'Region', w1,\n                'Zona', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { PrefixedContext } from \"@serenity-is/corelib\";\n\nexport interface TblSucursalRappiForm {\n}\n\nexport class TblSucursalRappiForm extends PrefixedContext {\n    static formKey = 'Sucursales.TblSucursalRappi';\n}", "\uFEFFimport { PrefixedContext } from \"@serenity-is/corelib\";\n\nexport interface TblSucursalUberForm {\n}\n\nexport class TblSucursalUberForm extends PrefixedContext {\n    static formKey = 'Sucursales.TblSucursalUber';\n}"],
  "mappings": "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",
  "names": ["TblSucursalColumns", "__name", "TblSucursalDidiColumns", "__name", "import_q", "TblSucursalDidiRow", "__name", "import_q", "TblSucursalDidiService", "x", "r", "s", "o", "TblSucursalRappiColumns", "__name", "import_q", "TblSucursalRappiRow", "__name", "import_q", "TblSucursalRappiService", "x", "r", "s", "o", "import_q", "TblSucursalRow", "__name", "import_q", "TblSucursalService", "x", "r", "s", "o", "TblSucursalUberColumns", "__name", "import_q", "TblSucursalUberRow", "__name", "import_q", "TblSucursalUberService", "x", "r", "s", "o", "import_corelib", "TblSucursalDidiForm", "__name", "import_corelib", "import_q", "_TblSucursalForm", "prefix", "w0", "w1", "TblSucursalForm", "__name", "import_corelib", "TblSucursalRappiForm", "__name", "import_corelib", "TblSucursalUberForm", "__name"]
}
